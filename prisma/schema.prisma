// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// 常用命令
// npx prisma init 初始化prisma
// npx prisma format 格式化schema
// npx prisma migrate dev --name init 初始化数据库
// npx prisma generate  重新生成Prisma Client

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// * 账户表
// type: 业务类型
model Account {
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  contact        String?   @db.VarChar(30)
  phone          String?   @db.VarChar(20)
  password       String?   @db.VarChar(255)
  company        String?   @db.VarChar(50)
  licenseNumber  String?   @db.VarChar(50)
  address        String?   @db.VarChar(255)
  bizType        Int?      @default(1)
  remark         String?   @db.Text
  isAdmin        Int?      @default(1) @db.TinyInt
  trialStartDate DateTime? @default(dbgenerated("NOW()")) @db.DateTime
  trialEndDate   DateTime? @default(dbgenerated("NOW()")) @db.DateTime
  startDate      DateTime? @db.DateTime
  endDate        DateTime? @db.DateTime
  status         Int?      @default(1)
  delFlag        Int       @default(0) @db.TinyInt
  createdAt      DateTime  @default(dbgenerated("NOW()")) @db.Timestamp
  updatedAt      DateTime  @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp
  Perm           Perm[]
  OperLog        OperLog[]

  @@index([contact, company, delFlag])
  @@map("account")
}

// * 权限表
model Perm {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  pId       Int?     @db.UnsignedInt
  accountId Int?     @db.UnsignedInt
  account   Account? @relation(fields: [accountId], references: [id])
  key       String?  @db.VarChar(255)
  status    Int?     @default(1)
  delFlag   Int      @default(0) @db.TinyInt
  createBy  String?
  updateBy  String?
  createdAt DateTime @default(dbgenerated("NOW()")) @db.Timestamp
  updatedAt DateTime @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp

  @@index([pId, accountId, key])
  @@map("perm")
}

// * 操作日志
model OperLog {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  accountId  Int?     @db.UnsignedInt
  account    Account? @relation(fields: [accountId], references: [id])
  type       Int?     @default(0)
  method     String?
  operName   String?
  operParam  String?  @db.Text
  operResult String?  @db.Text
  status     Int?     @db.TinyInt
  errorMsg   String?  @db.Text
  operTime   DateTime @default(dbgenerated("NOW()")) @db.Timestamp
  costTime   BigInt   @db.UnsignedBigInt

  @@index([accountId, type, operName])
  @@map("log")
}
